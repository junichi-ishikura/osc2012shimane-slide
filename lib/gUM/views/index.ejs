<!doctype html>
<html>
  <head>
    <title>WebRTC getUserMedia</title>

    <script src="/socket.io/socket.io.js"></script>
	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>	
	<script src="/javascripts/glfx.js"></script>
	<script src="/javascripts/config.js"></script>
	
  </head>
  <body>
    <p id="errorMessage"></p>
    <div>
      <p>カメラ映像</p>
      <video id="source" autoplay></video>
    </div>
    <div>
      <p>ブロードキャスト映像</p>
    	<img id="image" style="display: inline;"/>
    </div>

    <script>
    var video = document.getElementById('source');
    var image = document.getElementById("image");
    
    var socket = io.connect(config.host);
	socket.on('img push', function (data) {
       	image.src = data.img;
	});

	// Access to camera
    if (navigator.getUserMedia) {
      navigator.getUserMedia({audio: true, video: true}, gotStream, noStream);
    } else {
      navigator.webkitGetUserMedia({video:true, audio: true}, gotStream, noStream);
    }

	// Successed 
    function gotStream(stream) {
      if (navigator.getUserMedia) {
        video.src = stream;
      } else {
        video.src = webkitURL.createObjectURL(stream);
      }

    }

	// Failed 
    function noStream() {
      document.getElementById('errorMessage').textContent = 'No camera available.';
    }
    
    $().ready(function(){
		try {
        	var fxcanvas = fx.canvas();
    	} catch (e) {
        	alert(e);
        	return;
    	}
		
		video.width = config.width;
		video.height = config.height;
		
    	var timer = new Worker("/javascripts/timer.js");
    	timer.postMessage(1000/config.fps);
    	timer.onmessage = function(e) {
    		var texture = fxcanvas.texture(video);
    		fxcanvas.draw(texture).denoise(8).ink(0.8).hueSaturation(0, -1).brightnessContrast(0.31, 1).update();
            socket.emit('img send',{img:fxcanvas.toDataURL('image/jpeg')});
    	};		

    });
    </script>
  </body>
</html>